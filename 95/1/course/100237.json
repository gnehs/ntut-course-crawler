[{"name": "\u90ed\u5fe0\u7fa9", "email": "jykuo@ntut.edu.tw", "latestUpdate": "2007-09-20 10:20:32", "objective": "\u672c\u8ab2\u7a0b\u4e3b\u8981\u5728\u4ecb\u7d39\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247\u4ee5\u53ca\u8edf\u9ad4\u8a2d\u8a08\u6a23\u5f0f\u6280\u8853\u3002\u8ab2\u7a0b\u6db5\u84cb\u7684\u5167\u5bb9\u5305\u62ec\uff1a\u8edf\u9ad4\u8a2d\u8a08\u8207\u8a2d\u8a08\u6a23\u5f0f\u91cd\u8981\u57fa\u790e\u6982\u5ff5\u4ee5\u53ca\u751f\u6210\u3001\u7d50\u69cb\u3001\u884c\u70ba\u4e09\u985e\u8a2d\u8a08\u6a23\u5f0f\u3002\u63a2\u8a0e\u5728\u7cfb\u7d71\u9700\u6c42\u8207\u9700\u6c42\u898f\u683c\u4e4b\u5f8c\uff0c\u85c9\u7531\u7269\u4ef6\u5c0e\u5411\u7d50\u69cb\u8a2d\u8a08\u8207\u9069\u7576\u7684\u9078\u64c7\u4ee5\u767c\u5c55\u7cfb\u7d71\uff0c\u4e26\u904b\u7528\u8a2d\u8a08\u6a23\u5f0f\u91cd\u69cb\u8edf\u9ad4\u7cfb\u7d71\u7684\u908f\u8f2f\u7d50\u69cb\uff0c\u4ee5\u6539\u9032\u8edf\u9ad4\u8a2d\u8a08\u3002\u900f\u904e\u4f7f\u7528UML\u548cJava\u5be6\u969b\u958b\u767c\u8edf\u9ad4\u7cfb\u7d71\uff0c\u5b78\u7fd2\u8005\u5c07\u6709\u5145\u5206\u6a5f\u6703\u7df4\u7fd2\u8a2d\u8a08\u6a23\u5f0f\u4e4b\u4f7f\u7528\u3002", "schedule": "1\r\n9/12\r\n9/13\r\nSoftware Development Life Cycle\r\nC++ Polymorphism\r\n\r\n2\r\n9/19\r\n9/20\r\nUML use case diagrams\r\nHW#1 Polymorphism 10/11\r\n\r\n3\r\n9/26\r\n9/27\r\nUML class diagrams\r\nJava Class\r\nHW#1 Reference\r\n\r\n4\r\n10/3\r\n10/4\r\nJava Inheritance/ polymorphism\r\nUML sequence diagrams\r\nHW#2 Project proposal 10/18\r\n\r\n5\r\n10/10 \u570b\u6176\u65e5\r\n10/11\r\nObject-Orientation Design Principles \r\n\u3000\r\n6\r\n10/18\r\n10/19\r\nObject-Orientation Design Principles \r\n\u3000\r\n7\r\n10/24\r\n10/25\r\nObject-Orientation Design Principles \r\nTemplate method, Observer\r\nHW#3 use case diagram, Sequence diagram 11/1\r\n\r\n8\r\n10/31\r\n11/1\r\nObserver Exercise I\r\nObserver Exercise II\r\n\t\u3000\r\n9\r\n11/7\r\n11/08\r\n\u671f\u4e2d\u8003\r\nTemplate Exercise, Model-view-controller\r\n\t\u3000\r\n10\r\n11/15\r\nMVCxample , Java GUI\r\n\r\n11\r\n11/21\r\n11/22\r\nMVC Exercise III (Sample)\r\nMVC Exercise IV\r\n\r\n12\r\n11/28\r\n11/29\r\nCommand, Command Exercise I (Sample) (\u88dc\u8ab2)\r\nCommand Exercise II\r\n\t\u3000\r\n13\r\n12/5\r\n12/6\r\nSingleton, Singleton Exercise (Sample)\r\nFactory method, Exercise\r\n\r\n14\r\n12/12\r\n12/13\r\nStrategy Example\r\nStrategy, Exercise I\r\n\r\n15\r\n12/19\r\n12/20\r\nStrategy Exercise II\r\nAbstract Factory Example, Exercise I\r\n\t\u3000\r\n16\r\n12/26\r\n12/27\r\nBuilder, Composite, Exercise\r\nAbstract Factory, Exercise II\r\n\r\n17\r\n1/2\r\n1/3\r\nUnit Testing, Shopping Cart Exercise\r\n\r\n18\r\n1/9\r\n\u671f\u672b\u8003", "scorePolicy": "Class Exercise         35%\r\nHomework               30%\r\nMidterm exam           15%\r\nFinal exam             20%", "materials": "Textbook:\r\n\r\n1. Design Patterns: Elements Of Reusable Object-Oriented Software, Gamma, et. al., Addison-Wesley, 1995.\r\n2. An Introduction to Problem Solving & Programming, 4e, W. Savitch, Person/Prentice Hall, 2005\r\n\r\nReference: \r\nMartin Fowler, UML Distilled: A Brief Guide to the Standard Object Modeling Language, 3ed., Addison Wesley\r\n", "foreignLanguageTextbooks": false}]